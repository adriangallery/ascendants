type Transfer @entity {
  id: ID!
  from: Bytes!
  to: Bytes!
  tokenId: BigInt!
  value: BigInt!
  timestamp: BigInt!
}

type Holder @entity {
  id: ID!
  address: Bytes!
  tokenBalances: [TokenBalance!]! @derivedFrom(field: "holder")
}

type TokenBalance @entity {
  id: ID!
  tokenId: BigInt!
  holder: Holder!
  balance: BigInt!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  account: Bytes!
  operator: Bytes!
  approved: Boolean!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes!
  newOwner: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferBatch @entity(immutable: true) {
  id: Bytes!
  operator: Bytes!
  from: Bytes!
  to: Bytes!
  ids: [BigInt!]!
  values: [BigInt!]!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferSingle @entity(immutable: true) {
  id: Bytes!
  operator: Bytes!
  from: Bytes!
  to: Bytes!
  internal_id: BigInt!
  value: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type URI @entity(immutable: true) {
  id: Bytes!
  value: String!
  internal_id: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
